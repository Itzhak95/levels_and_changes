from scipy.stats import bootstrap
from statistics import mean
import numpy as np

# INPUT THE DATA

# To convert into lists: https://capitalizemytitle.com/tools/column-to-comma-separated-list/

# (1) Enter attitudes towards changes (specifically, increases) in the high and low signal groups
# To get this from STATA, run (e.g.): browse decrease_minwage if minwage_high == 0

decrease_low = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
decrease_high = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]

# (2) Enter the ideal points
# The variables: Q46 (min_wage), Q50 (taxes), Q54 (refugees), Q58 (benefits), Q62 (NHS)
# To get this from STATA, run (e.g.): browse Q46 if treatment == 1

ideal_points = [9,15,12,15,15,15,12,15,15,12,15,13,14,17.5,12.5,14,12,12,15,15,15,12,14,11.5,13,15,11.5,14,15,13,12.5,9,15,14,12,11.44,12,12,10.5,15,12.5,14,16,11.5,15,15,12,10,15,15,11.5,15,12.5,11,12.5,14,12,8,11,11,15,14.5,12,13,13,13,12,16,15,13,14,15,17.5,25,13.5,10,16,15,15,14,12.5,12,16.5,10,15,12,15,14,15,18,12,12,15,15,12.55,12,12,14,10,14,15,9,15,14,15,20,13,10,11,16,14,15,14,15,14,15,15,20,13.5,12,14,12.5,15,14,15,9,15,11,15,15,11,15,12,15,15,13,15,12,10,14,11.5,15,15,15,12,15,12,11.5,15,15,11,12,15,12,12,12,15,14,15,15,10.5,11,15,16.5,12,10,13,15,12,12,12,20,12,13,12,12,15,8,12,15,14,11.5,12,10.5,12,15,15,10.5,8,12,12,20,12,12,12,15,11,12,15,10,20,9,15,15,12,15,12,12,11,15,8,13,14,15,15,15,11.5,14,15,10,12,15,18,13,9.25,11.5,11,15,14,10,18,12,15,15,13,12.5,25,11.52,15,15,15,12,15,17,13,15,12,12,10.9,12,16,15,14,12,12,15,15,15,12,13,15,12,15,12,11,11.5,15,15,12,10.42,15,10.5,13,12.5,20,12,15,11.5,15,15,12.9,12,15,14,11.5,13,20,14,12,12,12.5,15,12,12,15,12,11,9,12,12,14,15,12,17.5,11.5,15,15,15,9,20,13,14,15,25,15,12,15,12,14,15,12,12,15,20,13,12,10.2,13,12,15,13,14,12,16,12.5,13,15,12,15,10,15,12,16,15,15,20,12,10.5,12,13,25,11,15,13,15,12,15,13,12,11,12,14,13,15,14,15,12,9.5,12,15,15,13,15,12,14,15,20,16,12,14,15,15,15,12,12,12,12,11,14,12,12,13,12,16.5,15,12.5,15,12,12,15,12.5,15,12,12,12,10,30,15,12,12,15,12,12,13,13,13.75,12.5,12,12,13,14,15,13,15,12.5,15,12,10,12,20,11,13,12,15,13.75,11,15,20,11,13,14,17,13,15,12,14,11,15,15,13,13,12.5,15,12,17.5,12.5,12.5,12,12,12,13,12,11.7,14,12,12.8,11,15,12,10,15,13,7,20,12,12,14.95,10,12.5,13.5,13,11,10.5,15,11,12,15,14,15,16,12,15,15.16,14,15,15,15,13,11.5,12,9,12,15,13,15,11,12,13,15,15,15,25,15,15,14,11.5,15,12,10,15,10,12.5,20,11,10,12,13,12.5,15,15,12.5,15,11.5,13,10,12,13.5,15,15,10,11,14,20,15,8,15,11,15,15,9,10,20,20,12,15,12,14,13.5,15,15,0,13,12,10.5,12,15,14.5,12,15,12.5,14,15,12,12,15,10,12,14,14,15,15,12,15,15,13,11,11.5,15,10.5,9,15,13,15,12,12.5,11.5,10.42,14,14,15,12.5,20,14,12,12,15,14,16,15,10.42,12,11.22,15,15,11.5,15,12.5,12,12,12,11,11.5,15,9,14,15,11,14,15,10.2,15,15,13.5,10.75,10.5,14,12,10,11,12,12,12,12,11.5,12,14,13.5,14,10,11.5,14,10,10,12.5,15,15,15,12,15,12,12,12,15,15,15,12,12,12.5,15,13,13.5,12,19,12,12,12,15,15,13,12.5,15,13,15,12.3,15,15,11.1,12.5,15,15,14,15,12,14,10.42,12,12,10,15,13.5,13,13,12,12,12,11.5,5,15,12.5,12,15,11.5,15,13,12.5,12,12.75,12,14,15,14,11,14,16,12,12,12,15,12,15,11.5,12,15,12,15,12,11,11,15,15,15,13,15,14,15,10,20,11,10,11,15,11,11.5,12,12,15,12,15,12,15,15,11,10,15,13.5,15,15,12.5,12,15,15,15,15,11,13,12,14,15,12,10.5,12.5,15,15,15,11,20,12.5,13,15,16,12,15,12,13.5,15,12,12,12,15,13.5,15,12.5,15,12,10,13,14,12,11,15,15,15,15,15,13.5,15,15,10,12,10,15,12,10.4,15,15,12,12.5,14,15,12.5,12,13,15,11,12,14.5,15,14,10,11,20,14,15,15,13,13,10,14,11,15,12,13,15,11.5,12,15,11,15,10,12.75,11.5,12,12,12,10,13,14,15,15,15,12,12,12,14,15,14,11,11,13,12,12,16,15,15,11.44,12,12,9.25,15,12.5,15,16,15,12,15,12,12,15,11.5,12,12,14,9,11,11.5,12.5,10,11.5,8,10,15,12,17,14,10,12.5,15,6,15,15,15,12,11,15,14.5,15,12,15,15,13,15,15,15,13,15,12.5,12,10,12.5,14,15,13,12,11.5,12,10.9,15,18,15,14,15,12,15,11,15,22,15,13,12,11.5,15,18,7,15,14,12,14,15,15,11,7.5,10,15,10,12,10.5,15.5,12,12,13,10.5,12,15,30,15,14,10,15,15,12,15,12,13,15,15,10,12,30,13,11.5,10,10,15,15,15,10.5,14,12,13,15,10.5,15,15,12,15,12,14,15,12,12.5,15,11.41,14,15,14,11.5,18,13,11,12,12,12,15,15,12,12,15,15,15,13,15,12,20,11,11,12.5,12.5,12,14,10,14,10,13,14,12,13,15,12,12,15,13.5,15,12,11,15,11,14,10,12,15,15,12,15,14.5,10,12,14,20,15,15,20,15,12,12.5,13,14,16,15,15,15,10.75,8,12.5,15,20,11.9,15,9.35,10,12,15,15,11,8.45,16,13,9,14,12,12,25,12.5,13,15,11,12,15,12.5,12,10,15,12,15,11,11,15,13,18,14,12,12,11.5,12.5,15,12,14,16,15,15,15,13,13,12.5,14.5,13,13.5,11.5,12,11,15,12.5,15,14.5,15,12,16,14,14,12,13,14,15,12,15,15,15,15,14,12,15,13,15,15,12,9,11,14.5,13,12,15,12,15,13,15,12,15,11,13,12,14,12,12,9,14,25,18,10.42,15,10,12,15,13,15,15,13,12,12,20,15,25,17,15,15,14,15,11,15,11.5,12,12,12,11.5,12,12,20,11.24,12,14,20,11,11.5,11.44,12.5,14,8,12,10.5,11,12.5,12,15,12,12.5]

# (3) Enter beliefs in the high and low signal groups
# To get this, run (e.g.): browse minwage_belief if minwage_high == 0

low_beliefs = [10.5,10.42,10.4,10,10.42,8.4,10.4,10.5,7.5,10.27,9,11,10.46,9.6,10.5,10,9,10,10.94,10.42,11,10.9,10.44,10.5,10.3,10.32,11,10.5,10.42,10.74,10.5,10,10.5,10.5,10.15,10.85,10.5,10.5,10.48,12,10,11,10.42,11,10.42,10.5,8.5,10.5,9.5,10.5,11,10.5,10.8,10.5,10.58,10,10.42,9,10.42,10.5,10.5,10.4,10.9,9,10.68,10.5,10.5,11,7,10.9,7,10.42,10.5,5.5,10.51,9.5,10,11.5,10.42,10.3,9.23,9.5,10.5,10,7.3,10,10.1,11,10.41,11,8.2,10.21,10.42,10.42,10.53,10.42,10.5,10.42,8,11,9.28,9.5,10.4,10.5,10,10.42,10.42,10,9.59,9,10.4,8.75,9,10.35,10.4,8,10.5,10.5,10.41,10.42,10.5,9.5,10.42,8,9.8,10.25,10.5,10.4,10.42,10.47,10.4,10.2,10.4,11,10.5,9.6,10,10.13,11.75,10,11,10.4,9.5,10.5,10.94,10.4,10.42,10.42,10.5,8.5,10.37,10,10,11.45,10,10.14,9,10.53,10.44,10.52,10.8,10.6,10.53,10.42,10.4,10.42,10.42,10.61,10.23,10,11,10,10.58,10.42,10.45,9,10.86,10.42,10.47,10.42,9,10.5,11,10.2,10.5,10.3,10.72,10.42,10.42,10.2,10,10,11,10,10.5,10.25,11,10.42,10.42,10.43,10.5,7,10,10.42,10.42,11,10,10.5,11,10.5,10.2,10,10,10.5,10.42,10.5,10.8,10.4,10.42,10,8,10.5,11,9,10.74,10.39,10,10,10.45,10.2,10.5,11,10.5,10.82,9,11,10.42,10.5,10.5,10.9,10.3,9.5,10.5,10.42,10.42,11,10,10.23,10.5,8,11,10.42,11,10,11,9,10.25,10,10.5,10.42,10,10.5,11,10.9,10.5,10,10.5,9.5,9,10.2,10.5,10,10.42,10.4,10.42,10,9.3,11,10.42,10.42,11,10.5,11,10.42,10.5,11,8,10.5,10.4,11.44,10.5,10,10,10,10,10.63,10.75,10,9,10.5,11.4,9.5,10,10,10,11,11,11,8.25,9,10,11,7.5,10.5,10.42,10,9,9,6.95,10.42,11,8.5,10.49,10.42,10.5,10,10.42,9.5,10,10.42,6,11,10,10.5,10,10.83,10.42,10,10.5,10.5,10.42,10.9,10.5,10.42,10.5,8.58,10.5,10,10.6,10.5,10,10.42,10.5,8,10.35,11,10.42,10.5,10.51,10.5,10.5,10.5,10.42,10.4,10,10.5,11,10.8,10.85,10.4,10.5,10.42,10,10.5,10.42,10,10.5,10.53,10.42,10.7,10.42,11,10.4,9.7,10,10.8,9.5,9.5,9.5,10,9.5,10,10,8.75,11,10.42,10.7,8,10.5,10,10.42,10.42,10,10.8,10.42,11,11.44,10.95,10.3,10,11,10.25,10.05,10,10.38,10.5,10.42,10.5,10.78,11,10.72,10.44,10.5,10.42,10,10.42,10,10.52,10,10.49,9.75,10.42,11,10.42,10.42,11,10.5,10.85,10.42,10.42,10.42,10.5,10.42,10.5,9,11,10.42,9.5,10.42,10.5,10.42,10,11,10.5,10.5,10,8,10.8,10.6,10.42,10.5,10.8,12,10.42,10.25,10,10.5,10.53,10.42,11,11,10.42,10.42,10.5,10.5,10,10.5,10.42,10.96,10.42,9,11.48,11,11,11.5,10.9,10.4,11,9,10.42,11,10,11,10.54,9.7,11,11,10.42,10.5,7,10.42,10,10.42,10.9,10.5,10,10.5,10.42,10.4,10.93,11,9,10.42,10.91,10.69,10.5,10.75,10,10,10,10.85,10.5,11,10.47,10.5,6,10,10.2,10,11,10.3,10,11,10,10.75,7.8,10.25,10.52,10.5,10,10,10.42,10.8,10.75,11,10.4,10.5,11,11,10.42,11,10.3,11,10.5,10.5,10,10.5,10.88,11,11,11.08,10,10,9,10.82,9.5,10,10,11,10.5,11,11,10,10.5,10.5,10.42,10,11,10.45,10.44,11,10,10.5,10.42,10.5,10.42,11,9.5,10.5,11,10.42,11.6,10.2,7.5,10.4,10,10.5,10.42,10,10.7,10,11,10.15,9.5,11,11,10,11,10.2,10,10.52,10.5,10.5,10.9,10.4,10,10.15,10.8,10.44,11,7,10.5,10.42,10.49,10.5,11.5,11,10.45,10.4,11,11,9,9,10,11,10.5,10.6,11,11,10.66,10.42,10.8,10.5,10.5,10.42,10.42,10,10.5,11,10.42,9.7,10.45,10.5,10.42,11,11,10.5,10.75,9.5,8,10.5,10.5,10.42,10.42,10,10.95,10.8,10.44,9.2,10.42,10.5,11,11,10.42,10.2,10.5,10,11,11,11,10,10.5,10,11,11,10.55,9,10.4,10.65,10.5,10.23,9.7,10.5,10,10,11.44,10.9,10.68,10,11,10.9,10.45,10.96,10.57,10.4,10.5,10,11,9,10.42,10,10.42,10.5,9.2,9.75,10.81,9.14,10,10,11,10.4,11,10.5,10.42,10.8,10.42,10,10.42,8.5,10.5,10.42,10.8,10.85,10.42,10.5,9.65,10,10.5,10.75,10.55,9.85,9,11,10,10.4,8.5,10.5,10.8,10.5,10.42,10.75,10.5,10.5,10.95,10.42,10.2,10.59,9.75,10.7,11,10.45,10,11,10.8,10.42,10.5,9,9,10.43,11,10.5,10.75,10.6,10.5,11,10.5,10,10.4,10,9.5,10.4,11.52,10.42,10.8,5,11,10.42,9,10.52,10.45,10.8,10,11,10.5,9,10,10,9.78,10,10,10,10.5,10.83,9.75,10.35,10.95,11,11,10.24,10.5,10.45,10.58,10.75,10.8,11,10.42,10,11,10,10.5,10.5,11,10,10.5,9.75,10.5,10,10.75,10.5,10,10.42,10,10.9,10.75,9,9,10.5,11,10,10.75,10.4,10.56,10.4,10.5,9,10,8,10.75,11,10.9,10.5,10.7,9.5,10.5,10.55,10.4,10,10.4,10.5,10.36,10.93,11,11,10.5,10.25,10.5,10.65,10.5,11,10,10.42,10.7,8.75,10,11,10.5,11,10.5,11,10.5,11,10,11,10,10,10.42,7.43,10.5,10.5,9.5,10.75,11,10.4,10.87,10.5,8.5,11,10.5,10.6,10.42,10.4,11,10.42,9,10.4,10,10.8,11,10.42,9.95,9,10.42,10,9,10.42,10.86,11,8,10.9,10.5,10.5,10.5,10.75,11,10.42,11,9,11,11,11,10,10.42,10,10.5,11,10.9,10,11,10,10,10.3,11,11.3,10.5,10.5,10,10,10.2,10.55,10.5,11,10.5,10.5,10.45,10.75,10.5,11,10.42,10.5,9,10.78,11,9,9,10.5,10.4,10.5,10,10.25,11,10.75,10.7,10,10,10.42,10,11,10.53,11,9.9,10,10,10,10.5,10.25,10.5,11,10.7,10,8,10.5,10.5,7,10,10.2,10.42,10.4,10.42,10.5,11,9,10,10,8,10.42,10.6,10,10.5,7.5,10.5,10,10,11,10.8,10,10.5,10.68,11,11,10,7,10.42,11,10,9.5,10,9,10.5,10.45,7.1,10.5,10.5,10.42,10,10,11,10.42,9,6.5,11,10.42,10,10.4,10.45,10,10.5,10.5,10,8,10.42,9,11,10.5,10.5,10.42,10.45,11,10.42,10.2,10.42,11,9.5,11,10.75,10.42,10.63,10.15,10.79,10.75,11,10,10,10,11,11,10.5,10.75,10.43,11,10.5,10.21,11,11,10.75,10.9,10.8,10,10.53,10,10.5,10,10.9,10,10.42,10.5,9.5,10.5,10.42,10.25,10.5,11,10.42,8,10.9,10.5,10.42,9.3,10.43,11.5,10.5,10.42,10.42,10.42,10.4,10.95,10.45,10.9,10.5,10.84,8,10.42,10.44,10.48,10.42,9.5,10.5,11,10.43,10.42,10.42,10.42,11.5,10.5,10,9,9.5,9,8.95,11,10.4,10.53,11,10,10.2,10.42,10,10.44,10.52,10.42,10.42,10.42,10.42,11,11.4,10,10.75,9,10.4,10.5,10,10.42,10.36,10.46,10.98,10,9.5,11,10.9,10.5,11,6,9,5.7,11,9,10.42,10.5,10.5,10.5,10.42,10.5,10.5,10.42,10.42,10,10.81,10.5,10,10.42,8.55,10.5,10.42,9,10.75,7.5,10,10.5,10.5,9.85,9.5,10.5,10.42,10.42,11,10.2,11,10.42,10,10.42,11,10.24,10,10,11,10.5,10.32,10,10.42,8,11,10.5,10.27,10.52,11,10,10.5,8.2]
high_beliefs = [11.5,11.34,10.65,11.5,10.92,10.99,10.42,10.5,11,11.25,11.5,12,10.42,11.23,11.5,10.42,11.44,10.42,11.4,12,10.42,13.72,12.5,10.4,11,12,12,12,16.5,13.3,11,11.2,10.42,14,11.15,10.23,12,13,10.42,11.44,12.5,10.9,10.42,13,10.42,12,13.25,12,10.42,11.44,11,11.25,12.5,10.4,10.5,10.5,11.2,15,10.5,12,10.42,11.4,11,12.1,13,11.5,10.42,10.42,13.1,10.5,12,13.4,15,10.5,11.5,11.5,10.42,10.42,11.2,10.25,10.53,10.42,11.5,10.42,12.5,10.42,10.4,10.5,10.5,11.5,10.42,10.5,10.5,10.4,10.42,11.17,11,15,11.5,12,11.44,11.15,11,12.4,12,10.42,11.25,10.5,10.5,12.5,10.8,10.42,11,10.42,10.9,11.43,11,11,10.49,11.5,11.5,13.5,13.5,10.42,11.44,11,11.5,10.42,10.79,13,11.25,12.6,12,11,11,12.5,14,12.5,10.42,12,11,12,15,11.44,12,10.5,10.55,11.52,10,15,11,11.75,10.42,10.87,11.8,11.5,11.2,11.5,12,10.42,13,12.88,12,11.5,11.5,11.43,13.27,10.42,12.5,10.5,11.21,8,12,10.43,10.4,13,10.5,11.42,11.5,10.42,11.5,12,11,10.42,10.5,11.23,11.44,10.42,13,11.25,15,10.5,12.5,11.75,11,10.42,10,11,11,11.5,12,12,12.44,11,15,16,10,11,10.42,10.42,10.35,10.4,11.75,11.16,11.5,11.85,11.5,17,12.5,10.7,11.44,15,10.42,10.42,10.42,12,11.5,10,11,10.42,11.6,10.5,11,10.5,13,11.5,11.4,11,10.3,10.42,17.41,11,10.52,11.4,10.42,10.8,11.4,11,12,12,11,12,10.6,11,11,11,10.5,11.44,11,10.42,11.47,11.4,11.72,10.45,14,13,12,13,11.44,11.44,10.42,10.42,13.5,12,12,11,11,10.42,11.44,11,12.2,10.54,14,11.5,13,12,13,11,10.55,10.4,12,11.41,10.42,10.42,14,10.85,12.5,12.5,11.5,11.44,13.5,10.42,10.42,12,12,11.25,12,10.42,12.5,11.3,11.25,12,11,10.42,13.5,11,10.42,11,10.42,12.6,11.67,14,11.65,11.6,10.42,13,10.4,10.42,10.42,12,11,12.59,12.5,10.42,10.25,11.5,11.75,10.5,10.5,10.42,12,12.5,11.5,11,10,10,12,12.5,11.67,10.42,11,10.8,11.8,10.21,13,10.35,11.5,11.44,10.42,11.5,10.6,11.44,10.42,12,11,16,11,10.44,12,13,11.44,13,11.86,11,10.5,12,10.42,11.83,10.42,10.42,12.5,10.42,11.5,17,16,12,11,10.26,11.35,11,10.5,12,12,10.42,10.42,12,10.42,10.5,10.42,11.46,11.5,11.44,16,10.42,10,10.42,10.5,12,10.42,10.5,10.42,10.42,15,11,11.5,10.35,12,11.5,10.75,15,11.43,12,11.44,10.5,16,11,10.4,10.42,10.41,11.5,11,10.73,11.46,15,10.42,10.42,10.42,10.42,11.44,11.44,11,10.42,13,12.25,15,10.53,12,11.5,10.65,10.42,11.8,11,10.42,12.5,13.2,11.15,11,11,11,11,11,11.44,15,13,11,10.62,10.45,12,10.94,10.42,11.47,10.4,12,15,10.42,10.4,12,14,11.52,13,16.5,10,10.42,11,11,10.9,11.44,10.42,11.2,11,11.44,11.5,10.5,10.8,10.42,12.5,10.7,11.42,11,11.44,11,10.42,12,11.5,10.42,11,10.42,11,11.49,13.4,11.5,10,11.44,11.5,11.5,12,10.45,11,10.31,11,11.44,11.5,10,11,10.95,10.5,12.59,11.4,11,11,10.42,11,12,12,10,12,11.3,12,13,10.42,10,12,12,11.55,13,13,13.49,10.42,11.44,12,11,12,11,11.5,12,12,11.44,11,12.5,10.82,11,11.5,11.5,11.4,10.42,12.45,11,12,11,11.23,12,10.55,11,10.5,10,11.2,10.42,12,12.5,10.5,11.2,12,11.42,11,11,11.5,10.42,14.5,10.23,11.5,11,12.21,10.5,10.42,11,11,10.8,12,7,11.15,10.5,11.44,13,10.42,10.8,11.5,11,13.75,11.5,11,15,14.5,10.95,10.91,12,11,10.5,12,12.5,13,12,10.42,12,11.5,11.5,12,11.5,11.3,15,12,11.13,10.42,11.53,11.9,10.5,12,14,10,11.2,12.5,12,12.44,10.45,10.23,10.5,12,10.5,10.42,10,13,11.65,10.4,10.42,10.4,11.5,15,10.42,10.5,17,12,11.2,10.47,10.42,10.42,11,10.42,11.85,11.52,11,11,12,10.6,11,11.35,12.75,16,11.2,11,10.25,11.5,10.9,10.8,10.41,10,11,10.84,11.22,10.42,12,10.24,12,10.42,10.7,11,12,10.4,10.75,14,11,11.5,10.25,12,15,12,10.42,12,12,11,11.5,10.42,10.42,11.44,10.75,11.44,14,10.2,14,12,20,11.5,10,10,10,13,10.62,10.42,10.49,10.75,10.42,10.58,10,12,10.45,10.42,12,10.54,12,10.42,11.2,13,11.44,10.5,12.5,10.42,11.5,14,12,12,14,10.42,10.42,10.49,12.5,11,11.5,10.5,10.42,10.42,10.5,10.5,11,10.7,10.8,12,11,11.45,13.5,13.75,10.5,12,11,11.4,10.42,12,11.5,11,12.53,10.5,10.5,12,10.5,11.5,10.42,13,10.42,10.44,10.4,13,10.42,11.75,12,10.8,10.5,11.5,10.5,12,11.08,12,14,10.58,11,10.42,11.22,11.5,10.6,12,10.5,11,12,10.5,11.25,12,13.5,15,11.75,11,10.4,12.33,12,11,10.4,14,10.42,12.5,11,12,12.5,12.5,12.5,10.5,11,14,11,11.5,11.5,11.5,10.54,14,12,11.45,11.25,13,13,11,11.5,14,10.42,11,10.7,11,12.5,10.25,12.5,14.5,10.95,14,13,11,10.5,12,11,11.5,14,11.2,15,12.5,10,10,9,10.43,12,12,11.5,12,12,12,12,12.75,11,12,10.3,10.8,11.5,12,12.3,12,11.5,13.5,11.5,12,11,12,11,11.44,12,12,10.42,12,10.5,12,11.5,10.42,11,11,11,11,11,10.42,14.5,11.5,11.5,18,11,13,10.5,13.15,10.42,12,10.42,10.42,11.5,13,14,13,12.5,11.44,12,11,11,11.35,11,11,12,10.42,12,10.42,11.55,11.25,12,12,11.5,11,12,11.5,11.2,11.6,10.49,11,11.25,10.4,10.42,12,12.5,13.5,11.4,15,11.45,10.5,12,12,10,10.5,12,12,11,11.25,12.6,10.5,12,10.5,10,11.44,12,12.5,11.23,11,10,12,11.5,13,10.5,11.5,10.45,15,11.5,10.9,11,11.4,10.42,10.9,10.43,11,13,13,12.5,15,12,11.5,12,10.45,11,13,12.5,11.25,11.5,11.5,13,10.44,11.36,10,11.5,12,10.42,10.23,11.5,11,11.28,10.63,15,12,12,11.5,11.27,13,10.42,11,13,13.5,13,12,11.43,10.42,10.5,16.5,13,11.4,11.5,11,10.5,10.5,10,12.75,10.42,7.5,10,11,12,14,10,8,10,10.42,12,13,11,10.42,11.3,10.49,10.42,14,10.5,10.45,15,10.42,10.42,11,12,11.44,11,12,11.6,10.42,10,12,11.44,11,11,10.42,12,12,10.42,11,10.5,13.5,11.35,11.2,11.3,13,10.5,10.42,11,10.42,11.63,11.75,11,10.58,11.35,12,11.21,11.5,10.49,12.5,12.44,11.44,10.9,11,12.5,12.5,11,14,10.42,12.5,10.42,11,11.44,10.48,11,11.44,13,10.84,12,11.44,10.42,12,11.5,11.44,11.1,11.2,12,10.42,10.42,13.5,10.42,15.6,11,10.8,10.2,10.42,10.42,11.3,10.1,11.3,10.75,10.5,10.42,12,10.5,13,13,12,10.5,10.42,10.42,11.5,10.94,10.2,10.5,10.42,10.5,10.4,11.47,10.42,11,12,10.42,10.5,10,10.42,10.5,11,11.42,11.2,11,12,10.42,11.5,11.2,13.47,11.38,10.5,11,11.5,11.44,11,11.4,11,13,10.5,10.5,10.42,11,10.5,12,13.13,10.5,10.42,12,15,10.85,12.3,11.5,11.5,10.42,10.9,11.44,10.5,11.33,10.5,10.51,11,10.24,10.42,11,10.8,10,11.3,10,12,11.62,10.42,11,10.2,13.64,10.42,10.4,11,10.5,12,11.5,12,10.42,11.4,11,10.42,11,10.75,12.5,10.2,11,12,10.42,11,10.5,12,12,10.5,11,12]

# PRELIMINARY CHECKS

print('CHECKS')
print(f'Share who want a decrease in low signal group: {mean(decrease_low)}')
print(f'Share who want a decrease in high signal group: {mean(decrease_high)}')
print(f'Average ideal point: {mean(ideal_points)}')
print(f'Average belief in low signal group: {mean(low_beliefs)}')
print(f'Average belief in high signal group: {mean(high_beliefs)}')
print('---')

# ESTIMATE

print('ESTIMATE')

# This function calculates the share whose ideal point exceeds their belief

def predicted_share(p_beliefs):
    num_pairs = 0
    actual_exceeds_ideal = 0
    for belief in p_beliefs:
        for ideal in ideal_points:
            num_pairs += 1
            if belief > ideal:
                actual_exceeds_ideal += 1
    return actual_exceeds_ideal/num_pairs

# We can now calculate our estimate

actual_difference = mean(decrease_high) - mean(decrease_low)
print(f'Actual difference: {actual_difference}')
predicted_difference = predicted_share(high_beliefs) - predicted_share(low_beliefs)
print(f'Predicted difference: {predicted_difference}')
did = predicted_difference - actual_difference
print(f'Difference in difference: {did}')
print('---')

# CONFIDENCE INTERVALS
print('CONFIDENCE INTERVAL')

# Put the data in a suitable form

decrease_low = np.array(decrease_low)
decrease_high = np.array(decrease_high)
ideal_points = np.array(ideal_points)
low_beliefs = np.array(low_beliefs)
high_beliefs = np.array(high_beliefs)

# Define the estimator

def estimator(decrease_low, decrease_high, ideal_points, low_beliefs, high_beliefs):
    actual_difference = mean(decrease_high)-mean(decrease_low)
    predicted_difference = predicted_share(high_beliefs)-predicted_share(low_beliefs)
    did = predicted_difference - actual_difference
    return did

# Now do the bootstrap
bootstrap_ci = bootstrap((decrease_low, decrease_high, ideal_points, low_beliefs, high_beliefs), estimator, confidence_level=0.95, method='basic')

# View 95% bootstrapped confidence interval
interval = bootstrap_ci.confidence_interval
print(interval)

print(f'SE: {bootstrap_ci.standard_error}')

#As a final check, look at midpoint of the interval:
print('---')
print('MIDPOINT')
print((interval.low + interval.high)/2)
